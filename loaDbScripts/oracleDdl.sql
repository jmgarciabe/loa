-- Drop the tables
DROP TABLE LAYER CASCADE CONSTRAINTS;
DROP TABLE DIMENSION CASCADE CONSTRAINTS;
DROP TABLE CRITERIA CASCADE CONSTRAINTS;
DROP TABLE LAYER2DIMENSION CASCADE CONSTRAINTS;
DROP TABLE ASSESSMENT_METRIC CASCADE CONSTRAINTS;
DROP TABLE DIMENSION_WEIGHTING CASCADE CONSTRAINTS;
DROP TABLE DIM_EXPERT_WEIGHTING CASCADE CONSTRAINTS;
DROP TABLE ASSESSMENT_RESULT CASCADE CONSTRAINTS;
DROP TABLE PERSONAL_ASSESSMENT CASCADE CONSTRAINTS;

-- Now drop the sequences for ID (primary key) creation
DROP SEQUENCE layer_seq;
DROP SEQUENCE dimension_seq;
DROP SEQUENCE criteria_seq;
DROP SEQUENCE assessment_metric_seq;
DROP SEQUENCE dimension_weighting_seq;
DROP SEQUENCE dim_expert_weighting_seq;
DROP SEQUENCE assessment_result_seq;
DROP SEQUENCE personal_assessment_seq;

-- Create all tables for the module
CREATE TABLE LAYER
(
	LAYER_ID    NUMBER(5) 	NOT NULL,
	LAYER_NAME  VARCHAR2(50)
);


CREATE TABLE DIMENSION
(
	DIMENSION_ID    NUMBER(5) 	NOT NULL,
	DIMENSION_NAME  VARCHAR2(50)
);

CREATE TABLE CRITERIA
(
	CRITERIA_ID    NUMBER(5) 	NOT NULL,
	CRITERIA_NAME  VARCHAR2(50) 
);

CREATE TABLE LAYER2DIMENSION
(
	DIMENSION_ID  NUMBER(5) NOT NULL,
	LAYER_ID      NUMBER(5) NOT NULL
);

CREATE TABLE ASSESSMENT_METRIC
(
	ASSESSMENT_METRIC_ID  NUMBER(5) NOT NULL,
	CRITERIA_ID           NUMBER(5) NOT NULL,
	DIMENSION_ID          NUMBER(5) NOT NULL,
	LAYER_ID              NUMBER(5) NOT NULL
);

CREATE TABLE DIMENSION_WEIGHTING
(
	DIMENSION_WEIGHTING_ID  NUMBER(5) 	NOT NULL,
	DIMENSION_ID   			NUMBER(5), 	
	LAYER_ID       			NUMBER(5), 	
	ITEM_ID        			NUMBER(38), 	
	ADMIN_WEIGHT   			VARCHAR2(30)
);

CREATE TABLE DIM_EXPERT_WEIGHTING ( 
	DIM_EXPERT_WEIGHTING_ID NUMBER(5) 	NOT NULL,
	DIMENSION_WEIGHTING_ID NUMBER(5),
	EPERSON_ID NUMBER(38),
	EXPERT_WEIGHT NUMBER(5)
);

CREATE TABLE ASSESSMENT_RESULT
(
	ASSESSMENT_RESULT_ID  NUMBER(5) 	NOT NULL,
	ASSESSMENT_METRIC_ID  NUMBER(5),		
	ITEM_ID               NUMBER(38), 	
	METRIC_VALUE          VARCHAR2(30) 	
);

CREATE TABLE PERSONAL_ASSESSMENT
(
	PERSONAL_ASSESSMENT_ID  NUMBER(5)	NOT NULL,	
	ASSESSMENT_RESULT_ID    NUMBER(5),	
	EPERSON_ID				NUMBER(38),
	ASSESS_VALUE            VARCHAR2(30) 
);


--unique keys
ALTER TABLE LAYER
	ADD CONSTRAINT UQ_LAYER_LAYER_NAME UNIQUE (LAYER_NAME);

ALTER TABLE DIMENSION
	ADD CONSTRAINT UQ_DIMENSION_DIMENSION_NAME UNIQUE (DIMENSION_NAME);

ALTER TABLE CRITERIA
	ADD CONSTRAINT UQ_CRITERIA_CRITERIA_NAME UNIQUE (CRITERIA_NAME);

ALTER TABLE DIMENSION_WEIGHTING
	ADD CONSTRAINT UQ_DIMENSION_WEIGHTING_BY_ITEM UNIQUE (DIMENSION_ID, LAYER_ID, ITEM_ID);

ALTER TABLE DIM_EXPERT_WEIGHTING
    ADD CONSTRAINT UQ_EXPERT_WEIGHTING UNIQUE (DIMENSION_WEIGHTING_ID, EPERSON_ID);

ALTER TABLE ASSESSMENT_RESULT
	ADD CONSTRAINT UQ_ASSESSMENT_RESULT_BY_ITEM UNIQUE (ASSESSMENT_METRIC_ID, ITEM_ID);

ALTER TABLE PERSONAL_ASSESSMENT
    ADD CONSTRAINT UQ_PERS_ASSESSMENT_EPERSON UNIQUE (ASSESSMENT_RESULT_ID, EPERSON_ID);


--primary keys
ALTER TABLE LAYER ADD CONSTRAINT PK_LAYER 
	PRIMARY KEY (LAYER_ID);

ALTER TABLE DIMENSION ADD CONSTRAINT PK_DIMENSION 
	PRIMARY KEY (DIMENSION_ID);

ALTER TABLE CRITERIA ADD CONSTRAINT PK_CRITERIA 
	PRIMARY KEY (CRITERIA_ID);

ALTER TABLE LAYER2DIMENSION ADD CONSTRAINT PK_LAYER2DIMENSION 
	PRIMARY KEY (DIMENSION_ID, LAYER_ID);

ALTER TABLE ASSESSMENT_METRIC ADD CONSTRAINT PK_ASSESSMENT_METRIC 
	PRIMARY KEY (ASSESSMENT_METRIC_ID);

ALTER TABLE DIMENSION_WEIGHTING ADD CONSTRAINT PK_DIMENSION_WEIGHTING 
	PRIMARY KEY (DIMENSION_WEIGHTING_ID);

ALTER TABLE DIM_EXPERT_WEIGHTING ADD CONSTRAINT PK_EXPERT_WEIGHTING
    PRIMARY KEY (DIM_EXPERT_WEIGHTING_ID);

ALTER TABLE ASSESSMENT_RESULT ADD CONSTRAINT PK_ASSESSMENT_RESULT 
	PRIMARY KEY (ASSESSMENT_RESULT_ID);

ALTER TABLE PERSONAL_ASSESSMENT ADD CONSTRAINT PK_PERSONAL_ASSESSMENT 
	PRIMARY KEY (PERSONAL_ASSESSMENT_ID);




--foreign keys
ALTER TABLE LAYER2DIMENSION ADD CONSTRAINT FK_DIMENSION 
	FOREIGN KEY (DIMENSION_ID) REFERENCES DIMENSION (DIMENSION_ID);

ALTER TABLE LAYER2DIMENSION ADD CONSTRAINT FK_LAYER 
	FOREIGN KEY (LAYER_ID) REFERENCES LAYER (LAYER_ID);	

ALTER TABLE ASSESSMENT_METRIC ADD CONSTRAINT FK_CRITERIA_ID 
	FOREIGN KEY (CRITERIA_ID) REFERENCES CRITERIA (CRITERIA_ID);

ALTER TABLE ASSESSMENT_METRIC ADD CONSTRAINT FK_ASSESSMETRIC_LAYER2DIM 
	FOREIGN KEY (DIMENSION_ID, LAYER_ID) REFERENCES LAYER2DIMENSION (DIMENSION_ID, LAYER_ID);

ALTER TABLE DIMENSION_WEIGHTING ADD CONSTRAINT FK_DIMWEIGHTING_LAYER2DIM 
	FOREIGN KEY (DIMENSION_ID, LAYER_ID) REFERENCES LAYER2DIMENSION (DIMENSION_ID, LAYER_ID);

ALTER TABLE DIM_EXPERT_WEIGHTING ADD CONSTRAINT FK_EXPERTWEIGHT_DIMWEIGHT
    FOREIGN KEY (DIMENSION_WEIGHTING_ID) REFERENCES DIMENSION_WEIGHTING (DIMENSION_WEIGHTING_ID);

ALTER TABLE ASSESSMENT_RESULT ADD CONSTRAINT FK_ASSESSMENT_METRIC_ID 
	FOREIGN KEY (ASSESSMENT_METRIC_ID) REFERENCES ASSESSMENT_METRIC (ASSESSMENT_METRIC_ID);

ALTER TABLE PERSONAL_ASSESSMENT ADD CONSTRAINT FK_PERSONA_ASSESSMENT_RESULT 
	FOREIGN KEY (ASSESSMENT_RESULT_ID) REFERENCES ASSESSMENT_RESULT (ASSESSMENT_RESULT_ID);



CREATE SEQUENCE layer_seq;

CREATE SEQUENCE dimension_seq;

CREATE SEQUENCE criteria_seq;

CREATE SEQUENCE assessment_metric_seq;

CREATE SEQUENCE dimension_weighting_seq;

CREATE SEQUENCE dim_expert_weighting_seq;

CREATE SEQUENCE assessment_result_seq;

CREATE SEQUENCE personal_assessment_seq;



CREATE OR REPLACE TRIGGER lay_bir
BEFORE INSERT ON LAYER
FOR EACH ROW

BEGIN
	SELECT layer_seq.NEXTVAL
	INTO :new.LAYER_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER dim_bir
BEFORE INSERT ON DIMENSION
FOR EACH ROW

BEGIN
	SELECT dimension_seq.NEXTVAL
	INTO :new.DIMENSION_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER crit_bir
BEFORE INSERT ON CRITERIA
FOR EACH ROW

BEGIN
	SELECT criteria_seq.NEXTVAL
	INTO :new.CRITERIA_ID
	FROM dual;
END;

/


CREATE OR REPLACE TRIGGER assess_bir
BEFORE INSERT ON ASSESSMENT_METRIC
FOR EACH ROW

BEGIN
	SELECT assessment_metric_seq.NEXTVAL
	INTO :new.ASSESSMENT_METRIC_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER dim_weight_bir
BEFORE INSERT ON DIMENSION_WEIGHTING
FOR EACH ROW

BEGIN
	SELECT dimension_weighting_seq.NEXTVAL
	INTO :new.DIMENSION_WEIGHTING_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER dim_exp_weight_bir
BEFORE INSERT ON DIM_EXPERT_WEIGHTING
FOR EACH ROW

BEGIN
	SELECT dim_expert_weighting_seq.NEXTVAL
	INTO :new.DIM_EXPERT_WEIGHTING_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER assess_res_bir
BEFORE INSERT ON ASSESSMENT_RESULT
FOR EACH ROW

BEGIN
	SELECT assessment_result_seq.NEXTVAL
	INTO :new.ASSESSMENT_RESULT_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER pers_assess_bir
BEFORE INSERT ON PERSONAL_ASSESSMENT
FOR EACH ROW

BEGIN
	SELECT personal_assessment_seq.NEXTVAL
	INTO :new.PERSONAL_ASSESSMENT_ID
	FROM dual;
END;

/


COMMIT;
